{
  "name": "FSC",
  "scopeName": "source.fsc",
  "fileTypes": [".fsc"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#braces"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.fsc",
          "match": "#.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.fsc",
          "match": "\\b(define|when|else|extends|mixin|with|enum|type|export|from|import|as|let|if)\\b"
        },
        {
          "name": "keyword.operator.fsc",
          "match": "\\b(and|or|not|in|validate)\\b"
        },
        {
          "name": "constant.language.fsc",
          "match": "\\b(true|false|null|undefined)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.fsc",
          "match": "\\b(string|number|boolean|object|array|date|email|url|uuid|positive|negative|integer|float|any|unknown)\\b"
        },
        {
          "name": "entity.name.type.fsc",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.fsc",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.fsc",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.fsc",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.fsc",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.regexp.fsc",
          "begin": "r\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.fsc",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.fsc",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.fsc",
          "match": "(\\|\\||&&|==|!=|<=|>=|<|>|\\||&|\\?|\\.|:|\\+|\\-|\\*|/|%|~|!~|=|=>|->|\\.{2})"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.fsc",
          "match": "\\b[a-z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "braces": {
      "patterns": [
        {
          "name": "punctuation.section.braces.begin.fsc",
          "match": "\\{"
        },
        {
          "name": "punctuation.section.braces.end.fsc",
          "match": "\\}"
        },
        {
          "name": "punctuation.section.brackets.begin.fsc",
          "match": "\\["
        },
        {
          "name": "punctuation.section.brackets.end.fsc",
          "match": "\\]"
        },
        {
          "name": "punctuation.section.parens.begin.fsc",
          "match": "\\("
        },
        {
          "name": "punctuation.section.parens.end.fsc",
          "match": "\\)"
        }
      ]
    }
  }
}