{
  "Basic Schema": {
    "prefix": "schema",
    "body": [
      "# ${1:Schema description}",
      "define ${2:SchemaName} {",
      "  id: number",
      "  name: string",
      "  ${3:field}: ${4:type}",
      "}",
      "",
      "export ${2:SchemaName}"
    ],
    "description": "Create a basic FSC schema"
  },
  "Schema with Validation": {
    "prefix": "schema-validation",
    "body": [
      "# ${1:Schema with validation}",
      "define ${2:SchemaName} {",
      "  id: number",
      "  email: string & matches(r\"^[\\^\\s@]+@[\\^\\s@]+\\.[\\^\\s@]+$\")",
      "  age: number & min(0) & max(120) & integer",
      "  name: string & minLength(2)",
      "",
      "  validate email != \"test@example.com\"",
      "  validate age >= 13",
      "}",
      "",
      "export ${2:SchemaName}"
    ],
    "description": "Create a schema with validation rules"
  },
  "Conditional Schema": {
    "prefix": "conditional-schema",
    "body": [
      "# ${1:Conditional schema}",
      "define ${2:SchemaName} {",
      "  type: ${3:option1} | ${4:option2}",
      "",
      "  when type = ${3:option1} {",
      "    ${5:field1}: ${6:type1}",
      "  } else when type = ${4:option2} {",
      "    ${7:field2}: ${8:type2}",
      "  }",
      "}",
      "",
      "export ${2:SchemaName}"
    ],
    "description": "Create a schema with conditional fields"
  },
  "Enum Definition": {
    "prefix": "enum",
    "body": [
      "enum ${1:EnumName} {",
      "  ${2:value1}",
      "  ${3:value2}",
      "  ${4:value3}",
      "}",
      "",
      "export ${1:EnumName}"
    ],
    "description": "Create an enum definition"
  },
  "Type Alias": {
    "prefix": "type-alias",
    "body": [
      "type ${1:TypeName} = ${2:baseType} & ${3:constraint1} & ${4:constraint2}",
      "",
      "export ${1:TypeName}"
    ],
    "description": "Create a type alias with constraints"
  },
  "Import Statement": {
    "prefix": "import",
    "body": "from \"${1:./path/to/file.fsc}\" import ${2:SchemaName}",
    "description": "Import from another FSC file"
  },
  "Variable Declaration": {
    "prefix": "let",
    "body": "let ${1:variableName} = ${2:value}",
    "description": "Declare a variable"
  },
  "Mixin Definition": {
    "prefix": "mixin",
    "body": [
      "mixin ${1:MixinName} {",
      "  ${2:field1}: ${3:type1}",
      "  ${4:field2}: ${5:type2}",
      "}",
      "",
      "export ${1:MixinName}"
    ],
    "description": "Create a mixin for reusable fields"
  },
  "Schema with Mixin": {
    "prefix": "schema-mixin",
    "body": [
      "define ${1:SchemaName} with ${2:MixinName} {",
      "  ${3:additionalField}: ${4:type}",
      "}",
      "",
      "export ${1:SchemaName}"
    ],
    "description": "Create a schema that uses a mixin"
  }
}