# Test function features

# Simple function that generates a ranged number type
@fn Ranged(min: number, max: number) -> type {
  return number & min(::min) & max(::max)
}

# Function for string length constraints
@fn StringLength(minLen: number, maxLen: number) -> type {
  declare var len: number = minLen
  declare var maxi: number = maxLen
  print("minLen:", ::len)
  print("maxLen:", ::maxi)
  return string & minLength(::len) & maxLength(::maxi)
}

define Product {
  price: Ranged(0, 10000)
  quantity: Ranged(0, 1000)
  name: StringLength(4, 100)
  description: StringLength(10, 500)
}

export Product
