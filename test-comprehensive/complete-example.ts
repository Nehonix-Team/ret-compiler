import { Interface } from 'reliant-type';

export const CompleteExampleSchema = Interface({
  name: "string",
  age: "number",
  active: "boolean",
  created: "date",
  data: "any",
  obj: "object",
  unknown: "unknown",
  username: "string(3,20)",
  password: "string(8,100)",
  score: "number(0,100)",
  rating: "number(1,5)",
  id: "positive",
  count: "int",
  balance: "integer",
  temperature: "float",
  precision: "double",
  debt: "negative",
  email: "email",
  website: "url",
  uuid: "uuid",
  phone: "phone",
  ip: "ip",
  config: "json",
  color: "hexcolor",
  encoded: "base64",
  token: "jwt",
  version: "semver",
  slug: "slug",
  description: "text",
  userPass: "password",
  nickname: "string?",
  bio: "string(,500)?",
  avatar: "url?",
  middleName: "string?",
  role: "admin|user|moderator|guest",
  status: "active|inactive|suspended|pending",
  priority: "low|medium|high|urgent",
  tags: "string[]",
  scores: "number[]",
  flags: "boolean[]",
  requiredTags: "string[](1,)",
  limitedCategories: "string[](,10)",
  rangedScores: "number[](3,5)",
  optionalPerms: "string[](1,20)?",
  metadata: "record<string,any>",
  headers: "record<string,string>",
  counts: "record<string,number>",
  settings: "record<string,any>?",
  zipCode: "string(/^\d{5}$/)",
  phoneNum: "string(/^\+?[1-9]\d{1,14}$/)",
  hexColor: "string(/^#[0-9A-Fa-f]{6}$/)",
  sku: "string(/^[A-Z]{3}-\d{6}$/)",
  apiVersion: "=2",
  environment: "=production",
  isEnabled: "=true",
  defaultRole: "=user",
});


export const RealWorldUserSchema = Interface({
  id: "uuid",
  email: "email",
  username: "string(3,30)",
  password: "string(8,)",
  displayName: "string(,100)?",
  bio: "string(,500)?",
  age: "number(13,120)",
  role: "admin|user|moderator",
  status: "active|inactive|suspended",
  permissions: "string[](1,50)",
  tags: "string[](,20)?",
  metadata: "record<string,any>?",
  website: "url?",
  phone: "phone?",
  zipCode: "string(/^\d{5}$/)?",
  createdAt: "date",
  isVerified: "boolean",
  loginCount: "positive",
  score: "int",
});